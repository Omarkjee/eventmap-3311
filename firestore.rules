service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Allow anyone to read user data (you can modify this for more privacy if needed)
      allow read: if true;

      // Allow creating new users and updating their own data
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;

      // Additional rule to allow users to modify only their RSVP_events field
      allow update: if request.auth != null && request.auth.uid == userId &&
                    request.resource.data.keys().hasOnly(['RSVP_events']) && 
                    request.resource.data.RSVP_events is list;
    }

    // Events collection
    match /events/{eventId} {
      // Allow anyone to read events
      allow read: if true;

      // Allow authenticated users to create events
      allow create: if request.auth != null;

      // Allow updating or deleting an event only if the user is the host of the event
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.host_id;

      // Allow authenticated users to RSVP to the event by updating RSVP_users
      allow update: if request.auth != null &&
                    request.resource.data.keys().hasOnly(['RSVP_users']) &&
                    request.resource.data.RSVP_users is list;
    }

    // RSVP collection inside each event
    match /events/{eventId}/rsvps/{rsvpId} {
      // Allow authenticated users to RSVP (create an RSVP)
      allow create: if request.auth != null;

      // Allow users to delete their RSVP if they are the one who created it
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
